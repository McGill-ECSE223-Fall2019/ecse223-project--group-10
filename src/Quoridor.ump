class Game{
   Boolean isOver;
   1 -> 0..1 Player winner;
   1 <@>- 2 Pawn pawns;
   1 <@>- 0..20 Wall walls;
   1 <@>- 81 Tile gameTiles;
   1 <@>- 1 History gameHistory;
}
class Player{
  unique userName;
  Integer playerScore;
  Integer playerWin;
  Integer playerLoss;
  Integer playerTie;
  Integer wallStock;
  1 -> 0..1 Pawn currentPawn;
}
class Quoridor{
   1 <@>- 1 Game;
   1 <@>- 1 History; 
   1 <@>- 2 Player; 
}
class Tile{
Integer x;
Integer y;
Boolean top;
Boolean bottom;
Boolean left;
Boolean right;
}
class Pawn{
Integer x;
Integer y;
}
class Wall {
  enum orientation{Horizontal, Vertical};
  enum state{Highlighted,NotHighlighted};
  enum owner{Black,White,Yellow,Red};
  Integer x;
  Integer y;
}
class History{
  1 <@>- * Action actionHistory; 
}
class Action{
  abstract;
  1 ->0..1 Player user;
}
class Move{
  isA Action;
  Integer oldX;
  Integer oldY;
  Integer newX;
  Integer newY;
}
class AddWall{
  isA Action;
  Integer x;
  Integer y;
  enum orientation{Horizontal, Vertical};
}
class Jump{
isA Action;
}